name: Blue-Green CodeDeploy Deployment

on:
  workflow_dispatch:

jobs:
  deployment:
    runs-on: ubuntu-latest

    env:
      TASK_DEFINITION: Strapi-Balaji
      CONTAINER_NAME: strapi-balaji
      APPLICATION_NAME: strapi-codedeploy-balaji
      DEP_GROUP_NAME: strapi-cd-deployment-group-balaji
      DEP_CONFIG_NAME: CodeDeployDefault.ECSCanary10Percent5Minutes

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Get Task Definition ARN
        run: |
          TASK_DEF_ARN=$(aws ecs describe-task-definition \
            --task-definition $TASK_DEFINITION \
            --query "taskDefinition.taskDefinitionArn" \
            --output text)
          echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV

      - name: Create AppSpec file
        run: |
          cat <<-EOF > appspec.yaml
          version: 0.0
          Resources:
            - TargetService:
                Type: AWS::ECS::Service
                Properties:
                  TaskDefinition: "${{ env.TASK_DEF_ARN }}"
                  LoadBalancerInfo:
                    ContainerName: "strapi-balaji"
                    ContainerPort: 1337
          EOF

      - name: Contents of AppSpec file
        run: cat appspec.yaml

      - name: Initiate CodeDeploy Deployment
        run: |

          CONTENT=$(<appspec.yaml)
          ENCODED_CONTENT=$(echo "$CONTENT" | base64 -w 0)
          ENCODED_HASH=$( echo "$CONTENT" | openssl dgst -sha256 -binary | openssl base64 -A)

          cat <<-EOF > codedeploy.json
            {
              "applicationName": "$APPLICATION_NAME",
              "deploymentGroupName": "$DEP_GROUP_NAME",
              "revision": {
                "revisionType": "AppSpecContent",
                "appSpecContent": {
                  "content": "${ENCODED_CONTENT}",
                  "sha256": "${ENCODED_HASH}"
                }
              },
              "deploymentConfigName": "$DEP_CONFIG_NAME",
              "description": "Triggered by GitHub Actions with task definition ${{ env.TASK_DEF_ARN }}"
            }
          EOF

      - name: CodeDeploy-Deployment Started
        run: aws deploy create-deployment --cli-input-json file://codedeploy.json
